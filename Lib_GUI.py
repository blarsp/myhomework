from tkinter import *

# ---------------------
# Класс окон приложения
# ---------------------
class Win(Tk):
   """
   Атрибуты окна:
   ---------------------
   text    - заголовок окна;
   w       - ширина окна;
   h       - высота окна;
   x       - координата расположения окна по оси X;
   y       - координата расположения окна по оси Y.
   """
   # **********************************************
   # Конструктор создания объекта "Окно приложения"
   # ----------------------------------------------
   def __init__(self,text,w,h,x,y):

      # Описание свойств окна
      # ---------------------
      Tk.__init__(self)
      self.title(text)
      self.geometry(str(w)+'x'+str(h)+'+'+str(x)+'+'+str(y))

   # ********************************************************
   # Метод - функция запуска цикла обработки событий для окна
   # приложения
   # ------------
   def run(self):
      self.mainloop()

# ---------------------
# Класс текстовых меток
# ---------------------
class Label_(Label):
   """
   Атрибуты метки:
   ----------------------------
   parent - родительский объект
   text   - текст;
   font   - строка с указанием шрифта, кегля, начертания;
   bg     - цвет фона текстовой метки;
   column - номер столбца, в котором расположить текстовую метку;
   row    - номер строки, в которой расположить текстовую метку;
   columnspan - число столбцов под текстовую метку;
   rowspan    - число строк под текстовую метку;
   sticky - растяжение текста по области виджета.
   """
   # **********************************************
   # Конструктор создания объекта "Текстовая метка"
   # ----------------------------------------------
   def __init__(self,parent,text,font,bg,
                column,row,columnspan,rowspan,sticky):
      self.l=Label(parent,text=text,font=font,bg=bg)
      self.l.text=text
      self.l.grid(column=column,row=row,
                  columnspan=columnspan,rowspan=rowspan,
                  sticky=sticky)

# -----------------
# Класс полей ввода
# -------------------
class Entry_ (Entry):
   """
   Атрибуты метки:
   ----------------------------
   parent - родительский объект
   width  - ширина поля по числу вводимых символов;
   font   - шрифт;
   fg     - цвет текста;
   relief - рельеф поля ввода;
   justify - выравнивание текста;
   column - номер столбца, в котором расположить текстовую метку;
   row    - номер строки, в которой расположить текстовую метку;
   """
   # *****************************************
   # Конструктор создания объекта "Поле ввода"
   # ----------------------------------------------------
   def __init__(self,parent,width,font,fg,relief,justify,
                     column,row):

      # Описание свойств поля ввода
      # ---------------------------
      Entry.__init__(self)
      self.e=Entry(parent,width=width,font=font,fg=fg,
                          relief=relief,justify=justify)
      self.e.grid(column=column,row=row)
      self.var=StringVar()
      self.e["textvariable"]=self.var

# ------------
# Класс кнопок
# --------------------
class Button_(Button):
   """
   Атрибуты кнопки:
   ----------------------------
   parent - родительский объект
   text   - текст;
   fg     - цвет текста на кнопке
   bg     - цвет фона кнопки;
   wigth  - ширина кнопки;
   height - высота кнопки;
   column - номер столбца, в котором расположить текстовую метку;
   row    - номер строки, в которой расположить текстовую метку;
   padx   - отступ виджета по оси X;
   pady   - отступ виджета по оси Y.
   """
   # *************************************
   # Конструктор создания объекта "Кнопка"
   # -----------------------------------------------
   def __init__(self,parent,text,fg,bg,width,height,
                column,row,padx,pady):

      # Описание свойств кнопки
      # ------------------------------------------
       self.b=Button(parent,text=text,fg=fg,bg=bg,
                            width=width,height=height)
       self.b.grid(column=column,row=row,padx=padx,pady=pady)

   def commandB(self,fun):
       self.b['command']=fun

# -----------
# Класс линий
# ------------
class Line_():
   """
   Атрибуты линии:
   -----------------------------
   parent - родительский виджет;
   x0     ─┐ координаты начальной 
   y0     ─┘ точки линии (x0,y0);
   xMax   ─┐ координаты конечной
   yMax   ─┘ точки линии (xMax,yMax);
   color  - цвет линии;
   arrow  - вид стрелки в конце линии
   """
   # ****************************************
   # Метод - функция создания объекта "Линия"
   # ----------------------------------------------------
   def __init__(self,parent,x0,y0,xMax,yMax,color,arrow):
      self.l=parent.create_line(x0,y0,xMax,yMax,
                                fill=color,arrow=arrow,
                                splinesteps=12)

